[{"path":"http://dipterix.org/readNSx/articles/read-nev-nsx-data.html","id":"introduction-to-readnsx","dir":"Articles","previous_headings":"","what":"Introduction to readNSx","title":"Read 'Blackrock' Neural Event & Signals","text":"readNSx R package converts Blackrock-Microsystems files (.nev, .nsx) commonly used formats compatible R, Python, Matlab. package designed neuroscientist study intracranial Electroencephalography use systems like Blackrock, Ripple, etc. Support versions 2.2, 2.3, 3.0. install readNSx CRAN, install development version","code":"install.packages(\"readNSx\") install.packages(\"readNSx\", repos = c(   dipterix = \"https://dipterix.r-universe.dev\",   CRAN = \"https://cloud.r-project.org\"))"},{"path":"http://dipterix.org/readNSx/articles/read-nev-nsx-data.html","id":"basic-usage","dir":"Articles","previous_headings":"","what":"Basic Usage","title":"Read 'Blackrock' Neural Event & Signals","text":"(Well, package advanced usage.)","code":""},{"path":"http://dipterix.org/readNSx/articles/read-nev-nsx-data.html","id":"one-time-import-for-the-first-time","dir":"Articles","previous_headings":"Basic Usage","what":"One-time import for the first time","title":"Read 'Blackrock' Neural Event & Signals","text":"never converted data, use following one-time function call import .nev .nsx data: path: path .nev nsx file (ns3, ns5) prefix: path prefix imported files (data saved) exclude_events: events exclude importing; default “spike” (spike-sorting waveform classes) partition_prefix: see Section “Anatomy imported files”. Please check help function ?readNSx::import_nsp","code":"readNSx::import_nsp(   path = \"YAB_Datafile_001.nev\",    prefix = \"YAB_Converted_001\",    exclude_events = \"spike\",    partition_prefix = \"/part\" )"},{"path":"http://dipterix.org/readNSx/articles/read-nev-nsx-data.html","id":"load-imported-data-from-r","dir":"Articles","previous_headings":"Basic Usage","what":"Load imported data from R","title":"Read 'Blackrock' Neural Event & Signals","text":"(never imported data , please check previous sub-section first)","code":""},{"path":"http://dipterix.org/readNSx/articles/read-nev-nsx-data.html","id":"example-1-load-epoch-from-nev-comment-data-packet-events","dir":"Articles","previous_headings":"Basic Usage > Load imported data from R","what":"Example 1: load epoch from NEV comment data packet events","title":"Read 'Blackrock' Neural Event & Signals","text":"following example loads trial epoch table NEV comment events. time_in_seconds second stimuli relative time_origin. Column comment whatever comments sent task script (sent psychtoolbox related software use collecting data).","code":"# prefix <- \"YAB_Converted_001\" nev <- readNSx::get_nev(prefix)  # `time_in_seconds` is relative to time-origin nev$header_basic$time_origin #>        Year       Month   DayofWeek         Day        Hour    #>        2022           8           5          26          15    #>      Minute      Second Millisecond  #>           4          10         156   readNSx::get_event(nev, \"comment\") #>     timestamp packet_id char_set flag data   comment   event time_in_seconds  #> 1      683033     65535        0    0  255  audio-ba comment        22.76777  #> 2      753242     65535        0    0  255  video-ba comment        25.10807  #> ..."},{"path":"http://dipterix.org/readNSx/articles/read-nev-nsx-data.html","id":"example-2-get-channel-information-and-data","dir":"Articles","previous_headings":"Basic Usage > Load imported data from R","what":"Example 2: get channel information and data","title":"Read 'Blackrock' Neural Event & Signals","text":"Please use square bracket channel_signal[] load data memory.","code":"# prefix <- \"YAB_Converted_001\"  # Gather information of channel 10 loaded <- readNSx::get_channel(prefix, channel_id = 10)  # Get NSx configurations,  loaded$nsx #> Basic header information (NSx): #>   Internal type: NEURALCD #>   Channel count: 152 #>   Sample rate: 2000 Hz #>   Time origin: 2022-08-26 15:04:10 158ms #> Extended header information (NSx): #>   - CC (152 x 16, channels: 1-152): type, electrode_id, electrode_label, ... #> Cache status: #>   Prefix: ... #>   Number of partitions: 1   # E.g. number of partitions (i.e. unpaused continuous recordings) loaded$nsx$nparts #> 1  # Get channel information loaded$channel_info #>    type electrode_id electrode_label physical_connector connector_pin #> 10   CC           10        RA10-010                  1            10 #>    min_digital_value max_digital_value min_analog_value #> 10            -32764             32764            -8191 #>    max_analog_value units high_freq_corner high_freq_order #> 10             8191    uV              300               1 #>    high_freq_type low_freq_corner low_freq_order low_freq_type #> 10              1         7500000              3             1 #>    sample_rate_signal sample_rate_timestamp which_nsp    filename #> 10               2000                 30000         3 RA10-010.h5  # Get channel data channel_signal <- loaded$channel_detail$part1$data; channel_signal #> Class: H5D #> Dataset: /data #> Filename: ... #> Access type: H5F_ACC_RDONLY #> Datatype: H5T_IEEE_F64LE #> Space: Type=Simple     Dims=798264     Maxdims=Inf #> Chunk: 16384  # Get the actual numbers channel_signal[]"},{"path":"http://dipterix.org/readNSx/articles/read-nev-nsx-data.html","id":"anatomy-of-imported-files","dir":"Articles","previous_headings":"","what":"Anatomy of imported files","title":"Read 'Blackrock' Neural Event & Signals","text":"imported file paths start prefix, specified , dear users. following demonstration, ’ll use placeholder <prefix> represent inputs. signal data stored <prefix>_ieeg/part* default, * positive integers representing partition number. Blackrock system allows users pause recordings resume later without start new block. partition readNSx represents one continuous recording within “block”. cases, pause within block, see one partition. experimental settings, one pauses, readNSx store continuous recordings separate folders make sure partition always continuous. start time partitions stored partition_info.tsv. Please aware partition pattern <prefix>_ieeg/part* fixed. can change pattern via parameter partition_prefix importing data. example, partition_prefix=\"_part create partition files within directory <prefix>_ieeg_part*. readNSx stores data, channels saved individually. example, channel 1 (LA-2) 2 (LA-2) stored separate HDF5 files. arrangement file-size computational considerations: storing channels together, file size become super big. Reading one channel might resulting reading whole file (handled poorly, using network drive) cases, HDF5 files can one file pointers (file locked software). limit batch computing algorithms can paralleled channel-level personal research requires fast approach copy share data quick inspection/analysis/visualizations (don’t want move large files around)","code":"partition_info         - Name of continuous recording within the block,                            sample rates, starting time per partition per NSx <prefix>_scans         - Basic information for current block <prefix>_channels      - Electrode channel information ( ID, Label, ... ) <prefix>_events/       - NEV setting headers and data packets (events)   - DIGLABEL           - Digital input setup   - NEUEVLBL           - Channel labels   - NEUEVWAVE          - Spike waveform settings   - ...                - Other settings   - event-***          - Data packets (digital inputs, comments...)   - waveforms.h5       - Spike waveforms & cluster <prefix>_ieeg          - NSx data folder   - configurations.rds - NSx basic headers (versions, number of partitions, ...)   - partition_info     - Continuous recording duration, start time, sample rates   - nsx_summary.rds    - Internally used   - part1/, part2/, ...- Channel folder     - XXXX-001.h5      - Channel data file, each file correspond to a channel.     - XXXX-002.h5         The file name ALWAYS ends with channel ID.     - ...                 Each HDF5 file contains a \"meta\" and a \"data\" part,                             \"meta\": JSON string of channel information                             \"data\": numerical signal voltage data (in `uV`)"},{"path":"http://dipterix.org/readNSx/articles/read-nev-nsx-data.html","id":"file-formats","dir":"Articles","previous_headings":"Anatomy of imported files","what":"File formats","title":"Read 'Blackrock' Neural Event & Signals","text":"following file types generated: Matlab: use h5disp get enclosing data names; use h5read read specific data Python: use h5py package load files R: want load individually, use raveio::h5_names get enclosing data names; use raveio::load_h5 read specific data. readNSx also provides high-level functions load (see ?readNSx::get_channel). .tsv (tab-separated values file): plain text files can easily read many languages. can open Microsoft Office: Excel. .rds (R object file): can read R, internally used readNSx store data objects. Users need read files (also delete , readNSx break). serve redundant files case tsv files altered accidentally (example, Excel might alter data formats automatically). see .rds file sharing name .tsv, share information.","code":""},{"path":"http://dipterix.org/readNSx/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Zhengjia Wang. Author, maintainer.","code":""},{"path":"http://dipterix.org/readNSx/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Wang Z (2024). readNSx: Read 'Blackrock-Microsystems' Files ('NEV', 'NSx'). R package version 0.0.2.9001, http://dipterix.org/readNSx/.","code":"@Manual{,   title = {readNSx: Read 'Blackrock-Microsystems' Files ('NEV', 'NSx')},   author = {Zhengjia Wang},   year = {2024},   note = {R package version 0.0.2.9001},   url = {http://dipterix.org/readNSx/}, }"},{"path":"http://dipterix.org/readNSx/index.html","id":"readnsx","dir":"","previous_headings":"","what":"Read Blackrock-Microsystems Files (NEV, NSx)","title":"Read Blackrock-Microsystems Files (NEV, NSx)","text":"goal readNSx read Blackrock-Microsystem files (.nev, .nsx) save information common formats well-supported R, Python, Matlab.","code":""},{"path":"http://dipterix.org/readNSx/index.html","id":"installation","dir":"","previous_headings":"","what":"Installation","title":"Read Blackrock-Microsystems Files (NEV, NSx)","text":"package CRAN soon. Install via can install nightly development version readNSx r-universe","code":"install.packages(\"readNSx\") # Enable repository from dipterix options(repos = c(   dipterix = 'https://dipterix.r-universe.dev',   CRAN = 'https://cloud.r-project.org'))    # Download and install readNSx in R install.packages('readNSx')"},{"path":"http://dipterix.org/readNSx/index.html","id":"how-to-use-readnsx","dir":"","previous_headings":"","what":"How to use readNSx","title":"Read Blackrock-Microsystems Files (NEV, NSx)","text":"Click read “detailed” manual including usage, anatomy readNSx.","code":""},{"path":"http://dipterix.org/readNSx/index.html","id":"import-into-rave","dir":"","previous_headings":"How to use readNSx","what":"Import into RAVE","title":"Read Blackrock-Microsystems Files (NEV, NSx)","text":"import data RAVE (R Analysis Visualization iEEG), use following code example. raw data stored EMU-008_sub-YAB_task-congruency_run-01_NSP-1.nev along ns3 ns5. data written RAVE raw-data path ~/rave_data/raw/, YAB/block008_part1, YAB/block008_part2, … (one block data may contain multiple segments continuous recordings). example also avoids reading default spike-waveforms. Simply set exclude_events=NULL enable default spike clusters. just want import certain NSx files (example, ns3), check exclude_nsx parameter.","code":"readNSx::import_nsp(   path = \"~/EMU_RAW/EMU-008_sub-YAB_task-congruency_run-01_NSP-1.nev\",    prefix = \"~/rave_data/raw/YAB/block008\",    exclude_events = \"spike\", partition_prefix = \"_part\" )"},{"path":"http://dipterix.org/readNSx/index.html","id":"import-to-bids-like-format","dir":"","previous_headings":"How to use readNSx","what":"Import to BIDS-like format","title":"Read Blackrock-Microsystems Files (NEV, NSx)","text":"Blackrock-Microsystem data incompatible BIDS. lacks several critical information require manually edits. However, may use import_nsp import BIDS-like format.","code":"readNSx::import_nsp(   path = \"~/EMU_RAW/EMU-008_sub-YAB_task-congruency_run-01_NSP-1.nev\",    prefix = file.path(     \"~/BIDSRoot/MyDataSet/sub-YAB/ses-008/ieeg/\",     \"sub-YAB_ses-008_task-congruency_acq-NSP1_run-01\"   ),    exclude_events = \"spike\", partition_prefix = \"/part\" )"},{"path":"http://dipterix.org/readNSx/index.html","id":"license","dir":"","previous_headings":"","what":"License","title":"Read Blackrock-Microsystems Files (NEV, NSx)","text":"(legal notice. Please seek professional advice) source code readNSx freely available educational use. components might subject Blackrock copyright. Please contact Blackrock permissions software free. readNSx released MPL-2.0 license copyright information. link readNSx project (e.g. via R library(readNSx) function), need change license (even proprietary projects, makes prefer MPL-2.0 strong copyleft licenses GPL) including copyright information redistributing (see LICENSE file). rare cases, redistribute source code, either modified -outside organization, must release code MPL-2.0 license. license file explicitly states source code incompatible license (including GPL, see Exhibit B - “Incompatible Secondary Licenses” Notice license file).","code":""},{"path":"http://dipterix.org/readNSx/reference/get_channel.html","id":null,"dir":"Reference","previous_headings":"","what":"Get channel data — get_channel","title":"Get channel data — get_channel","text":"Obtain channel information data given prefix channel ID.","code":""},{"path":"http://dipterix.org/readNSx/reference/get_channel.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get channel data — get_channel","text":"","code":"get_channel(x, channel_id)"},{"path":"http://dipterix.org/readNSx/reference/get_channel.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get channel data — get_channel","text":"x path prefix specified import_nsp, 'nev/nsx' object channel_id integer channel number. Please aware channel number, channel ID, electrode ID refer concept 'Blackrock' 'NEV' specifications. Electrodes physical metals, refer channels historical reasons.","code":""},{"path":"http://dipterix.org/readNSx/reference/get_channel.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get channel data — get_channel","text":"list containing channel data meta information, along enclosing 'NSx' information; invalid channel ID, function returns NULL","code":""},{"path":"http://dipterix.org/readNSx/reference/get_event.html","id":null,"dir":"Reference","previous_headings":"","what":"Get event data packets from 'NEV' — get_event","title":"Get event data packets from 'NEV' — get_event","text":"Get event data packets 'NEV'","code":""},{"path":"http://dipterix.org/readNSx/reference/get_event.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get event data packets from 'NEV' — get_event","text":"","code":"get_event(x, event_type, ...)"},{"path":"http://dipterix.org/readNSx/reference/get_event.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get event data packets from 'NEV' — get_event","text":"x path prefix (see import_nsp), 'nev/nsx' object event_type event type load, common event types 'digital_inputs' packet identifier 0 'spike' packet identifier 1 10000 version 3.0 'recording' packet identifier 65529 version 3.0, available version 3.0 'configuration' packet identifier 65530 version 3.0, available version 3.0 'log' packet identifier 65531 version 3.0, available version 3.0 'button_trigger' packet identifier 65532 version 3.0, available version 3.0 'tracking' packet identifier 65533 version 3.0, available version 3.0 'video_sync' packet identifier 65534 version 3.0, available version 3.0 'comment' packet identifier 65535 version 3.0, available version 2.3 ... pass methods","code":""},{"path":"http://dipterix.org/readNSx/reference/get_event.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get event data packets from 'NEV' — get_event","text":"data frame corresponding event type, NULL event found invalid","code":""},{"path":"http://dipterix.org/readNSx/reference/get_file_type.html","id":null,"dir":"Reference","previous_headings":"","what":"Get 'Blackrock' file type — get_file_type","title":"Get 'Blackrock' file type — get_file_type","text":"Reads first 10 bytes containing file type version information.","code":""},{"path":"http://dipterix.org/readNSx/reference/get_file_type.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get 'Blackrock' file type — get_file_type","text":"","code":"get_file_type(path)"},{"path":"http://dipterix.org/readNSx/reference/get_file_type.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get 'Blackrock' file type — get_file_type","text":"path path 'Blackrock' '.nev' '.nsx' file, binary connection.","code":""},{"path":"http://dipterix.org/readNSx/reference/get_file_type.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get 'Blackrock' file type — get_file_type","text":"list containing file information, including file type, version information, normalized absolute path.","code":""},{"path":"http://dipterix.org/readNSx/reference/get_nev.html","id":null,"dir":"Reference","previous_headings":"","what":"Load 'NEV' information from path prefix — get_nev","title":"Load 'NEV' information from path prefix — get_nev","text":"Load 'NEV' information path prefix","code":""},{"path":"http://dipterix.org/readNSx/reference/get_nev.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Load 'NEV' information from path prefix — get_nev","text":"","code":"get_nev(x, ...)"},{"path":"http://dipterix.org/readNSx/reference/get_nev.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Load 'NEV' information from path prefix — get_nev","text":"x path prefix specified import_nsp, 'nev/nsx' object ... reserved future use","code":""},{"path":"http://dipterix.org/readNSx/reference/get_nev.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Load 'NEV' information from path prefix — get_nev","text":"'NEV' header information x valid, otherwise NULL. See Section \"'NEV' Data\" get_specification","code":""},{"path":"http://dipterix.org/readNSx/reference/get_nsp.html","id":null,"dir":"Reference","previous_headings":"","what":"Get a collection list containing 'NEV' and 'NSx' headers — get_nsp","title":"Get a collection list containing 'NEV' and 'NSx' headers — get_nsp","text":"Get collection list containing 'NEV' 'NSx' headers","code":""},{"path":"http://dipterix.org/readNSx/reference/get_nsp.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get a collection list containing 'NEV' and 'NSx' headers — get_nsp","text":"","code":"get_nsp(x)"},{"path":"http://dipterix.org/readNSx/reference/get_nsp.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get a collection list containing 'NEV' and 'NSx' headers — get_nsp","text":"x path prefix specified import_nsp, 'nev/nsx' object","code":""},{"path":"http://dipterix.org/readNSx/reference/get_nsp.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get a collection list containing 'NEV' and 'NSx' headers — get_nsp","text":"list containing 'nev' imported 'nsx' headers, see import_nsp details","code":""},{"path":"http://dipterix.org/readNSx/reference/get_nsx.html","id":null,"dir":"Reference","previous_headings":"","what":"Load 'NSx' information from path prefix — get_nsx","title":"Load 'NSx' information from path prefix — get_nsx","text":"Load 'NSx' information path prefix","code":""},{"path":"http://dipterix.org/readNSx/reference/get_nsx.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Load 'NSx' information from path prefix — get_nsx","text":"","code":"get_nsx(x, which, ...)"},{"path":"http://dipterix.org/readNSx/reference/get_nsx.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Load 'NSx' information from path prefix — get_nsx","text":"x path prefix specified import_nsp, 'nev/nsx' object 'NSx' load, example, =3 loads 'ns3' headers ... reserved future use","code":""},{"path":"http://dipterix.org/readNSx/reference/get_nsx.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Load 'NSx' information from path prefix — get_nsx","text":"'NSx' header information data found, otherwise returns NULL. See Section \"'NSx' Data\" get_specification","code":""},{"path":"http://dipterix.org/readNSx/reference/get_specification.html","id":null,"dir":"Reference","previous_headings":"","what":"Get '.nev' or 'nsx' specification — get_specification","title":"Get '.nev' or 'nsx' specification — get_specification","text":"Get '.nev' 'nsx' specification","code":""},{"path":"http://dipterix.org/readNSx/reference/get_specification.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get '.nev' or 'nsx' specification — get_specification","text":"","code":"get_specification(version, type = c(\"nev\", \"nsx\"))"},{"path":"http://dipterix.org/readNSx/reference/get_specification.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get '.nev' or 'nsx' specification — get_specification","text":"version either character string vector two integers; example, \"2.2\", \"2.3\", c(3, 0). Currently three versions supported since unable find versions. Please file issue ticket others versions desired. type file type; choices 'nev' 'nsx'","code":""},{"path":"http://dipterix.org/readNSx/reference/get_specification.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get '.nev' or 'nsx' specification — get_specification","text":"file specification list. specification usually contains three sections: basic header (fixed length), extended header (dictionary-style), data packets (data stream). specification used parse data files.","code":""},{"path":"http://dipterix.org/readNSx/reference/get_specification.html","id":"-nev-data","dir":"Reference","previous_headings":"","what":"'NEV' Data","title":"Get '.nev' or 'nsx' specification — get_specification","text":"'NEV' object consists three sections: Section 1 contains basic information time-origin time-stamps, time-stamp sampling frequency, data packets sizes. Section 2 extended header containing configurations channels, digital signals, etc. data packets section 3, least one table section describing settings. section 3 collection event packets digital signal inputs ( likely used version 2.2 'Ripple'), spike waveform, comments (sometimes storing epoch information), etc. Please aware common entries can found across different file versions, entries version-specific. making script general, need careful handling differences. information, please search data specification manual 'Blackrock-Microsystems' website.","code":""},{"path":"http://dipterix.org/readNSx/reference/get_specification.html","id":"-nsx-data","dir":"Reference","previous_headings":"","what":"'NSx' Data","title":"Get '.nev' or 'nsx' specification — get_specification","text":"'NSx' file refers data files ending 'ns1' 'ns9'. Common types 'ns2' (sampling 1000 Hz), 'ns3' (sampling 2000 Hz), 'ns5' (sampling 30,000 Hz). 'NSx' file also consists three sections. Section 1 contains basic information time-origin time-stamps, sampling frequencies, channel counts within file. Please careful item time_resolution_timestamp sampling frequency signals. item sampling frequency time-stamp. obtain signal sample rate, divided time_resolution_timestamp period. example, 'ns3' usually time-stamp resolution 30,000 period=15, hence signal sample rate 30000/15=2000Hz. Section 2 usually contains one one channel table number rows coincide number channels section 1. information channel labels, physical connectors, pins, units, filter settings, digital--analog conversion also included. Since readNSx always attempts convert signals 'volts' 'milli-volts' 'micro-volts', 'units' column might different actual recorded 'NSx' file headers. Section 3 contains partitions continuous recording. imported/loaded readNSx, digital signals always converted analog signals 'micro-volts' unit. Please use get_channel get channel data.","code":""},{"path":"http://dipterix.org/readNSx/reference/get_specification.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Get '.nev' or 'nsx' specification — get_specification","text":"","code":"get_specification(version = c(2,3), type = \"nev\") #> <Blackrock [nev] specification version [2.3]> #> Section 1: Header Basic Information. #>   - file_type [type: string, size: 8] #>   - file_spec [type: uint8] #>   - additional_flags [type: uint16] #>   - bytes_in_headers [type: uint32] #>   - bytes_in_data_packet [type: uint32] #>   - time_resolution_timestamp [type: uint32] #>   - time_resolution_samples [type: uint32] #>   - time_origin [type: uint16] #>   - application_to_create_file [type: string, size: 32] #>   - comment [type: string, size: 256] #>   - number_of_extended_headers [type: uint32] #> Section 2: Header Extended Information. #>   - ARRAYNME [type: packet, size: 32] #>   - ECOMMENT [type: packet, size: 32] #>   - CCOMMENT [type: packet, size: 32] #>   - MAPFILE [type: packet, size: 32] #>   - NEUEVWAV [type: packet, size: 32] #>   - NEUEVLBL [type: packet, size: 32] #>   - NEUEVFLT [type: packet, size: 32] #>   - DIGLABEL [type: packet, size: 32] #>   - VIDEOSYN [type: packet, size: 32] #>   - TRACKOBJ [type: packet, size: 32] #> Section 3: Data Packets. #>   - 0 [type: packet, size: 20] #>   - 1-2048 [type: packet, size: 16] #>   - 65535 [type: comment_packet, size: 24] #>   - 65534 [type: packet, size: 40] #>   - 65533 [type: packet, size: 28] #>   - 65532 [type: packet, size: 16] #>   - 65531 [type: packet, size: 16]  get_specification(version = \"3.0\", type = \"nsx\") #> <Blackrock [nsx] specification version [3.0]> #> Section 1: Basic Header. #>   - file_type [type: string, size: 8] #>   - file_spec [type: uint8] #>   - bytes_in_headers [type: uint32] #>   - label [type: string, size: 16] #>   - comment [type: string, size: 256] #>   - period [type: uint32] #>   - time_resolution_timestamp [type: uint32] #>   - time_origin [type: uint16] #>   - channel_count [type: uint32] #> Section 2: Extended Headers. #>   - CC [type: packet, size: 66] #> Section 3: Data Packets. #>   - data_header [type: packet, size: 13] #> Section 3 (continued): Variable data points. #>   - data_points [type: int16]"},{"path":"http://dipterix.org/readNSx/reference/import_nsp.html","id":null,"dir":"Reference","previous_headings":"","what":"Import signal data from 'Blackrock-Microsystems' data files — import_nsp","title":"Import signal data from 'Blackrock-Microsystems' data files — import_nsp","text":"Please use import_nsp import 'NEV' 'NSx' files.","code":""},{"path":"http://dipterix.org/readNSx/reference/import_nsp.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Import signal data from 'Blackrock-Microsystems' data files — import_nsp","text":"","code":"import_nsp(   path,   prefix = NULL,   exclude_events = \"spike\",   exclude_nsx = NULL,   verbose = TRUE,   partition_prefix = \"/part\" )"},{"path":"http://dipterix.org/readNSx/reference/import_nsp.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Import signal data from 'Blackrock-Microsystems' data files — import_nsp","text":"path path 'NEV' 'NSx' files prefix path prefix save data files exclude_events exclude one 'NEV' data events, choices 'spike', 'video_sync', 'digital_inputs', 'tracking', 'button_trigger', 'comment', 'configuration'; default 'spike' since spike data takes long time parse, users might still use offline spike-sorting algorithms. exclude_nsx excluded 'NSx' types, integer vectors 1 9; example, exclude_nsx=c(1,2) prevent 'ns1' 'ns2' imported verbose logical progress object: logical, verbose indicates whether print progress messages; verbose progress object, object must inc method; examples Progress shiny package, progress2 dipsaus, shiny_progress shidashi partition_prefix additional prefix data partition; default \"/part\"","code":""},{"path":"http://dipterix.org/readNSx/reference/import_nsp.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Import signal data from 'Blackrock-Microsystems' data files — import_nsp","text":"list configurations, see get_specification contained.","code":""},{"path":"http://dipterix.org/readNSx/reference/import_nsp.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Import signal data from 'Blackrock-Microsystems' data files — import_nsp","text":"","code":"# Please get your own sample data first. This package does not # provide sample data for privacy and license concerns :)  if(interactive() && file.exists(\"sampledata.nev\")) {  library(readNSx)  # ---- Import for the first time -------------------------------- import_nsp(   path = \"sampledata.nev\",   prefix = file.path(     \"~/BIDSRoot/MyDataSet/sub-YAB/ses-008/ieeg/\",     \"sub-YAB_ses-008_task-congruency_acq-NSP1_run-01\"   ),   exclude_events = \"spike\", partition_prefix = \"/part\" )  # ---- Load header information -------------------------------- prefix <- \"sub-YAB_ses-008_task-congruency_acq-NSP1_run-01\" nev <- get_nev(prefix) ns3 <- get_nsx(prefix, which = 3)  # get nev from nsx, or nsx from nev get_nev(ns3) get_nsx(nev, which = 5)  # ---- Load channel data result <- get_channel(prefix, channel_id = 10) channel_signal <- result$channel_detail$part1$data channel_signal[]  }"},{"path":"http://dipterix.org/readNSx/news/index.html","id":"readnsx-002","dir":"Changelog","previous_headings":"","what":"readNSx 0.0.2","title":"readNSx 0.0.2","text":"CRAN release: 2023-06-21 Added support: NEV/NSx 3.0 specification Corrected NEV 3.0 file bug. cases, acquisition software may incorrectly set “Time Resolution Time-stamp”, resulting wrong event time-stamps","code":""},{"path":"http://dipterix.org/readNSx/news/index.html","id":"readnsx-001","dir":"Changelog","previous_headings":"","what":"readNSx 0.0.1","title":"readNSx 0.0.1","text":"CRAN release: 2023-02-01 Added NEWS.md file track changes package.","code":""}]
